@model LaheyHealth.ViewModels.QuestionsViewModel

@{
    ViewBag.Title = "Poll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div class="row youAreHere">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h1>
            Questionnaire
        </h1>

        <div class="progress" style="width:100%;">
            <span class="progress-bar progress-bar-success" style="width: 65%;">
            </span>
        </div>
    </div>
</div>
<!-- Loop through items and show polls acordingly -->
<!-- Insert current scale -->
<div class="row scale">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h3>
            @Html.DisplayFor(model => model.CurrentScale)
        </h3>
    </div>
</div>
<div class="row">
    
        <!-- Get next four in the LstItems that relate to the scale-->
        @foreach (var item in Model.LstItems)
            {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 itemArea form-group">
                <!-- Subscale of item -->

                <h5 class="subscale">
                    @Html.DisplayFor(modelItem => item.Subscale.Name)
                </h5>
                <!-- Item -->
                <p class="well item">
                    <b>
                        @Html.DisplayFor(modelItem => item.Name)
                    </b>
                </p>
                <p>
                    <br />
                    <div class="row">


                        <!-- check if skill list is not empty, if it isnt show the title and options -->
                        @if (Model.LstSkill.Count > 0)
                        {
                            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <!-- value type-->
                                <div class="valueType">
                                    <hr />
                                    <b>
                                        @Html.DisplayFor(skillType => Model.SkillType)
                                    </b>
                                    <hr />
                                </div>
                                <!-- Loop through diferent questions that need to be answered (Importance and Skill)-->
                                <div class="btn-group btn-block" data-toggle="buttons">
                                    @foreach (var skill in Model.LstSkill)
                                    {
                        <!-- Options to be selected-->

                                        <label class="btn btn-default btn-group-lg btn-block">
                                            <input class="btn-block answer" type="radio" autocomplete="off" name="@item.Id" value="@skill.Id">
                                            @Html.DisplayFor(skillItem => skill.Label, Model.LastInsertedAnswer)
                                        </label>
                                    }
                                </div>
                            </div>
                        }
                        <!-- check if importance list is not empty, if it isnt show the title and options -->
                        @if (Model.LstImportance.Count > 0)
                        {
                            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <!-- value type-->
                                <div class="valueType">
                                    <hr />
                                    <b>
                                        @Html.DisplayFor(skillType => Model.ImportanceType)
                                    </b>
                                    <hr />
                                </div>
                                <!-- Loop through diferent questions that need to be answered (Importance and Skill)-->
                                <div class="btn-group btn-block" data-toggle="buttons">
                                    @foreach (var importance in Model.LstImportance)
                                    {
                                        <!-- these will be radio buttons, but for now we will just leave them as texts-->
                                        <label class="btn btn-default btn-group-lg btn-block">
                                            <input class="btn-block answer" type="radio" autocomplete="off" name="@item.Id" value="@importance.Id">
                                            @Html.DisplayFor(importanceItem => importance.Label)
                                        </label>
                                    }
                                </div>
                                </div>
                                }
                            </div>
                </p>
            </div>
        }
        
        
</div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <a class="btn btn-primary btn-block" href="#">
            Next
        </a>
    </div>
</div>


<script type="text/javascript">
    
</script>
